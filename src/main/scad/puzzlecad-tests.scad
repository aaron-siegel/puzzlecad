include <puzzlecad.scad>

burr_parser_test_cases = [

    ["Simple Array",
     [".xx.|.xx.", "....|..x."],
     [[[[0], [0]], [[0], [0]]], [[[24], [0]], [[24], [0]]], [[[24], [0]], [[24], [24]]], [[[0], [0]], [[0], [0]]]]
    ],
    
    ["Multi-Component Array",
     [".aa.|.bc.", "....|..c."],
     [[[[0], [0]], [[0], [0]]], [[[1], [0]], [[2], [0]]], [[[1], [0]], [[3], [3]]], [[[0], [0]], [[0], [0]]]]
    ],
    
    ["Kaenel Number",
     975,
     [[[[1], [1]], [[1], [1]]], [[[1], [1]], [[1], [1]]], [[[0], [0]], [[1], [1]]], [[[0], [0]], [[1], [0]]], [[[1], [0]], [[1], [0]]], [[[1], [1]], [[1], [1]]]]
    ],
    
    ["Voxel with Connector",
     ["x{connect=mz+,clabel=Ay-}x"],
     [[[[24, [["connect", "mz+"], ["clabel", "Ay-"]]]]], [[[24]]]]
    ],
    
    ["Connector Specified as Globals",
     ["{connect=mz+,clabel=Ay-}", "#x#"],
     [[[[24, [["connect", "mz+"], ["clabel", "Ay-"]]]]], [[[24]]], [[[24, [["connect", "mz+"], ["clabel", "Ay-"]]]]]]
    ],
        
    ["Voxel with Connector and Extra Braces",
     ["x{connect=mz+,clabel=Ay-,components={z+,y-}}x"],
     [[[[24, [["connect", "mz+"], ["clabel", "Ay-"], ["components", "z+,y-"]]]]], [[[24]]]]
    ],
    
];

echo("---- Parser tests");

for (test = burr_parser_test_cases) {
    echo(test[0]);
    let (result = to_burr_info(test[1]))
    if (result != test[2]) {
        echo(str("EXPECTED: ", test[2]));
        echo(str("ACTUAL: ", result));
        assert(false, "Parse error.");
    }
}

burr_piece_test_cases = [

    ["Single Voxel",
     ["x"],
     [[-5, -5, -5], [-5, -5, 5], [-5, 5, -5], [-5, 5, 5], [5, -5, -5], [5, -5, 5], [5, 5, -5], [5, 5, 5]],
     [[0, 1, 5, 4], [0, 2, 3, 1], [0, 4, 6, 2], [1, 3, 7, 5], [2, 6, 7, 3], [4, 5, 7, 6]],
     12, 0, 1
    ],

    ["L Tricube",
     ["xx|x."],
     [[-5, -5, -5], [-5, -5, 5], [-5, 17, -5], [-5, 17, 5], [5, 5, -5], [5, 5, 5], [5, 17, -5], [5, 17, 5], [17, -5, -5], [17, -5, 5], [17, 5, -5], [17, 5, 5]],
     [[0, 1, 9, 8], [0, 2, 3, 1], [0, 8, 10, 4, 6, 2], [1, 3, 7, 5, 11, 9], [2, 6, 7, 3], [4, 5, 7, 6], [4, 10, 11, 5], [8, 9, 11, 10]],
     12, 0, 1
    ],

    ["Chiral Tetracube",
     ["xx|x.", "..|x."],
     [[-5, -5, -5], [-5, -5, 5], [-5, 7, 5], [-5, 7, 17], [-5, 17, -5], [-5, 17, 17], [5, 5, -5], [5, 5, 5], [5, 7, 5], [5, 7, 17], [5, 17, -5], [5, 17, 17], [17, -5, -5], [17, -5, 5], [17, 5, -5], [17, 5, 5]],
     [[0, 1, 13, 12], [0, 4, 5, 3, 2, 1], [0, 12, 14, 6, 10, 4], [1, 2, 8, 7, 15, 13], [2, 3, 9, 8], [3, 5, 11, 9], [4, 10, 11, 5], [6, 7, 8, 9, 11, 10], [6, 14, 15, 7], [12, 13, 15, 14]],
     12, 0, 1
    ],
    
    ["Cross Heptacube",
     ["...|.x.|...", ".x.|xxx|.x.", "...|.x.|..."],
     [[-5, 7, 7], [-5, 7, 17], [-5, 17, 7], [-5, 17, 17], [7, -5, 7], [7, -5, 17], [7, 7, -5], [7, 7, 7], [7, 7, 17], [7, 7, 29], [7, 17, -5], [7, 17, 7], [7, 17, 17], [7, 17, 29], [7, 29, 7], [7, 29, 17], [17, -5, 7], [17, -5, 17], [17, 7, -5], [17, 7, 7], [17, 7, 17], [17, 7, 29], [17, 17, -5], [17, 17, 7], [17, 17, 17], [17, 17, 29], [17, 29, 7], [17, 29, 17], [29, 7, 7], [29, 7, 17], [29, 17, 7], [29, 17, 17]],
     [[0, 1, 8, 7], [0, 2, 3, 1], [0, 7, 11, 2], [1, 3, 12, 8], [2, 11, 12, 3], [4, 5, 17, 16], [4, 7, 8, 5], [4, 16, 19, 7], [5, 8, 20, 17], [6, 7, 19, 18], [6, 10, 11, 7], [6, 18, 22, 10], [8, 9, 21, 20], [8, 12, 13, 9], [9, 13, 25, 21], [10, 22, 23, 11], [11, 14, 15, 12], [11, 23, 26, 14], [12, 15, 27, 24], [12, 24, 25, 13], [14, 26, 27, 15], [16, 17, 20, 19], [18, 19, 23, 22], [19, 20, 29, 28], [19, 28, 30, 23], [20, 21, 25, 24], [20, 24, 31, 29], [23, 24, 27, 26], [23, 30, 31, 24], [28, 29, 31, 30]],
     12, 0, 1
    ],
    
    ["Blind Corner",
     ["xx|xx", "x.|xx"],
     [[-5, -5, -5], [-5, -5, 17], [-5, 17, -5], [-5, 17, 17], [5, -5, 5], [5, -5, 17], [5, 7, 5], [5, 7, 17], [17, -5, -5], [17, -5, 5], [17, 7, 5], [17, 7, 17], [17, 17, -5], [17, 17, 17]],
     [[0, 1, 5, 4, 9, 8], [0, 2, 3, 1], [0, 8, 12, 2], [1, 3, 13, 11, 7, 5], [2, 12, 13, 3], [4, 5, 7, 6], [4, 6, 10, 9], [6, 7, 11, 10], [8, 9, 10, 11, 13, 12]],
     12, 0, 1
    ],
    
    ["Piece #975",
     975,
     [[-5, -5, -5], [-5, -5, 17], [-5, 17, -5], [-5, 17, 17], [17, -5, -5], [17, -5, 17], [17, 7, -5], [17, 7, 17], [29, 7, 5], [29, 7, 17], [29, 17, 5], [29, 17, 17], [43, -5, -5], [43, -5, 5], [43, 7, -5], [43, 7, 5], [55, -5, 5], [55, -5, 17], [55, 17, 5], [55, 17, 17], [65, -5, -5], [65, -5, 17], [65, 17, -5], [65, 17, 17]],
     [[0, 1, 5, 4], [0, 2, 3, 1], [0, 4, 6, 14, 12, 20, 22, 2], [1, 3, 11, 9, 7, 5], [2, 22, 23, 19, 18, 10, 11, 3], [4, 5, 7, 6], [6, 7, 9, 8, 15, 14], [8, 9, 11, 10], [8, 10, 18, 16, 13, 15], [12, 13, 16, 17, 21, 20], [12, 14, 15, 13], [16, 18, 19, 17], [17, 19, 23, 21], [20, 21, 23, 22]],
     12, 0, 1
    ],
    
    ["Voxels Meet At Edges",
     ["x.|.x"],
     [[-5, -5, -5], [-5, -5, 5], [-5, 5, -5], [-5, 5, 5], [5, -5, -5], [5, -5, 5], [5, 5, -5], [5, 5, 5], [7, 7, -5], [7, 7, 5], [7, 17, -5], [7, 17, 5], [17, 7, -5], [17, 7, 5], [17, 17, -5], [17, 17, 5]],
     [[0, 1, 5, 4], [0, 2, 3, 1], [0, 4, 6, 2], [1, 3, 7, 5], [2, 6, 7, 3], [4, 5, 7, 6], [8, 9, 13, 12], [8, 10, 11, 9], [8, 12, 14, 10], [9, 11, 15, 13], [10, 14, 15, 11], [12, 13, 15, 14]],
     12, 0, 1
    ],
    
    // Small inset with close tolerances to ensure nearby vertices are properly distinguished.
    ["Small Inset",
     ["xx|x.", "..|x."],
     [[-5.99, -5.99, -5.99], [-5.99, -5.99, 5.99], [-5.99, 6.01, 5.99], [-5.99, 6.01, 17.99], [-5.99, 17.99, -5.99], [-5.99, 17.99, 17.99], [5.99, 5.99, -5.99], [5.99, 5.99, 5.99], [5.99, 6.01, 5.99], [5.99, 6.01, 17.99], [5.99, 17.99, -5.99], [5.99, 17.99, 17.99], [17.99, -5.99, -5.99], [17.99, -5.99, 5.99], [17.99, 5.99, -5.99], [17.99, 5.99, 5.99]],
     [[0, 1, 13, 12], [0, 4, 5, 3, 2, 1], [0, 12, 14, 6, 10, 4], [1, 2, 8, 7, 15, 13], [2, 3, 9, 8], [3, 5, 11, 9], [4, 10, 11, 5], [6, 7, 8, 9, 11, 10], [6, 14, 15, 7], [12, 13, 15, 14]],
     12, 0, 0.01
    ],
     
    ["Single Beveled Voxel",
     ["x"],
     [[-5, -4.5, -4.5], [-5, -4.5, 4.5], [-5, 4.5, -4.5], [-5, 4.5, 4.5], [-4.5, -5, -4.5], [-4.5, -5, 4.5], [-4.5, -4.5, -5], [-4.5, -4.5, 5], [-4.5, 4.5, -5], [-4.5, 4.5, 5], [-4.5, 5, -4.5], [-4.5, 5, 4.5], [4.5, -5, -4.5], [4.5, -5, 4.5], [4.5, -4.5, -5], [4.5, -4.5, 5], [4.5, 4.5, -5], [4.5, 4.5, 5], [4.5, 5, -4.5], [4.5, 5, 4.5], [5, -4.5, -4.5], [5, -4.5, 4.5], [5, 4.5, -4.5], [5, 4.5, 4.5]],
     [[0, 1, 5, 4], [0, 2, 3, 1], [0, 4, 6], [0, 6, 8, 2], [1, 3, 9, 7], [1, 7, 5], [2, 8, 10], [2, 10, 11, 3], [3, 11, 9], [4, 5, 13, 12], [4, 12, 14, 6], [5, 7, 15, 13], [6, 14, 16, 8], [7, 9, 17, 15], [8, 16, 18, 10], [9, 11, 19, 17], [10, 18, 19, 11], [12, 13, 21, 20], [12, 20, 14], [13, 15, 21], [14, 20, 22, 16], [15, 17, 23, 21], [16, 22, 18], [17, 19, 23], [18, 22, 23, 19], [20, 21, 23, 22]],
     12, 1/sqrt(2), 1
    ],
    
    // Complex beveled piece requiring a double-reduction to normalize the initial polyhedron, with two kinds of concave edges
    ["Complex Beveled Piece",
     ["..x|.xx|...", "..x|..x|..."],
     [[7, 7.5, -4.5], [7, 7.5, 4.5], [7, 16.5, -4.5], [7, 16.5, 4.5], [7.5, 7, -4.5], [7.5, 7, 4.5], [7.5, 7.5, -5], [7.5, 7.5, 5], [7.5, 16.5, -5], [7.5, 16.5, 5], [7.5, 17, -4.5], [7.5, 17, 4.5], [19, -4.5, -4.5], [19, -4.5, 16.5], [19, 7, -4.5], [19, 7, 4.5], [19, 7.5, -5], [19, 7.5, 5], [19, 16.5, 5], [19, 16.5, 16.5], [19, 17, 4.5], [19.5, -5, -4.5], [19.5, -5, 16.5], [19.5, -4.5, -5], [19.5, -4.5, 17], [19.5, 7, -5], [19.5, 16.5, 17], [19.5, 17, 5], [19.5, 17, 16.5], [28.5, -5, -4.5], [28.5, -5, 16.5], [28.5, -4.5, -5], [28.5, -4.5, 17], [28.5, 16.5, -5], [28.5, 16.5, 17], [28.5, 17, -4.5], [28.5, 17, 16.5], [29, -4.5, -4.5], [29, -4.5, 16.5], [29, 16.5, -4.5], [29, 16.5, 16.5]],
     [[0, 1, 5, 4], [0, 2, 3, 1], [0, 4, 6], [0, 6, 8, 2], [1, 3, 9, 7], [1, 7, 5], [2, 8, 10], [2, 10, 11, 3], [3, 11, 9], [4, 5, 15, 14], [4, 14, 16, 6], [5, 7, 17, 15], [6, 16, 25, 23, 31, 33, 8], [7, 9, 18, 17], [8, 33, 35, 10], [9, 11, 20, 18], [10, 35, 36, 28, 27, 20, 11], [12, 13, 22, 21], [12, 14, 15, 17, 18, 19, 13], [12, 21, 23], [12, 23, 25, 14], [13, 19, 26, 24], [13, 24, 22], [14, 25, 16], [18, 20, 27], [18, 27, 28, 19], [19, 28, 26], [21, 22, 30, 29], [21, 29, 31, 23], [22, 24, 32, 30], [24, 26, 34, 32], [26, 28, 36, 34], [29, 30, 38, 37], [29, 37, 31], [30, 32, 38], [31, 37, 39, 33], [32, 34, 40, 38], [33, 39, 35], [34, 36, 40], [35, 39, 40, 36], [37, 38, 40, 39]],
     12, 1/sqrt(2), 1
    ],
    
    ["Beveled Blind Corner",
     ["xx|xx", "x.|xx"],
     [[-5, -4.5, -4.5], [-5, -4.5, 16.5], [-5, 16.5, -4.5], [-5, 16.5, 16.5], [-4.5, -5, -4.5], [-4.5, -5, 16.5], [-4.5, -4.5, -5], [-4.5, -4.5, 17], [-4.5, 16.5, -5], [-4.5, 16.5, 17], [-4.5, 17, -4.5], [-4.5, 17, 16.5], [4.5, -5, 5], [4.5, -5, 16.5], [4.5, -4.5, 17], [4.5, 7, 17], [5, -5, 4.5], [5, -4.5, 5], [5, -4.5, 16.5], [5, 7, 5], [5, 7, 16.5], [5, 7.5, 17], [16.5, -5, -4.5], [16.5, -5, 4.5], [16.5, -4.5, -5], [16.5, -4.5, 5], [16.5, 7, 5], [16.5, 7, 16.5], [16.5, 7.5, 17], [16.5, 16.5, -5], [16.5, 16.5, 17], [16.5, 17, -4.5], [16.5, 17, 16.5], [17, -4.5, -4.5], [17, -4.5, 4.5], [17, 7, 4.5], [17, 7.5, 5], [17, 7.5, 16.5], [17, 16.5, -4.5], [17, 16.5, 16.5]],
     [[0, 1, 5, 4], [0, 2, 3, 1], [0, 4, 6], [0, 6, 8, 2], [1, 3, 9, 7], [1, 7, 5], [2, 8, 10], [2, 10, 11, 3], [3, 11, 9], [4, 5, 13, 12, 16, 23, 22], [4, 22, 24, 6], [5, 7, 14, 13], [6, 24, 29, 8], [7, 9, 30, 28, 21, 15, 14], [8, 29, 31, 10], [9, 11, 32, 30], [10, 31, 32, 11], [12, 13, 18, 17], [12, 17, 16], [13, 14, 18], [14, 15, 20, 18], [15, 21, 20], [16, 17, 25, 23], [17, 18, 20, 19], [17, 19, 26, 25], [19, 20, 27, 26], [20, 21, 28, 27], [22, 23, 34, 33], [22, 33, 24], [23, 25, 34], [24, 33, 38, 29], [25, 26, 35, 34], [26, 27, 37, 36], [26, 36, 35], [27, 28, 37], [28, 30, 39, 37], [29, 38, 31], [30, 32, 39], [31, 38, 39, 32], [33, 34, 35, 36, 37, 39, 38]],
     12, 1/sqrt(2), 1
    ],
    
    ["Different Scale on Each Axis",
     ["x"],
     [[-6.5, -4, -1.5], [-6.5, -4, 1.5], [-6.5, 4, -1.5], [-6.5, 4, 1.5], [6.5, -4, -1.5], [6.5, -4, 1.5], [6.5, 4, -1.5], [6.5, 4, 1.5]],
     [[0, 1, 5, 4], [0, 2, 3, 1], [0, 4, 6, 2], [1, 3, 7, 5], [2, 6, 7, 3], [4, 5, 7, 6]],
     [15, 10, 5], 0, 1
    ]

];

echo("---- Polyhedra generation tests");

for (test = burr_piece_test_cases) {
    echo(test[0]);
    burr_piece_base(
        test[1],
        test_poly = [test[2], test[3]],
        $burr_scale = test[4],
        $burr_bevel = test[5],
        $burr_inset = test[6]
    );
}

$burr_scale = 12;

// Render a complex piece with a male joint, female joint, and label
burr_piece([".x{connect=mz+,clabel=Ly-,label_orient=y-x+,label_text=ABC,label_hoffset=0.5}x{connect=fx+,clabel=Lz-}.|.xx.", "....|..x."], $burr_bevel = 1/sqrt(2), $burr_inset = 0.07);

translate([0, 40, 0]) beveled_cube([15, 10, 5], center = true);

// Render male connectors in all 24 orientations
*burr_plate([
    ["x{connect=mz+,clabel=Lx+}"],
    ["x{connect=mz+,clabel=Ly-}"],
    ["x{connect=mz+,clabel=Lx-}"],
    ["x{connect=mz+,clabel=Ly+}"],
    ["x{connect=mz-,clabel=Lx+}"],
    ["x{connect=mz-,clabel=Ly-}"],
    ["x{connect=mz-,clabel=Lx-}"],
    ["x{connect=mz-,clabel=Ly+}"],
    ["x{connect=my+,clabel=Lx+}|."],
    ["x{connect=my+,clabel=Lz-}|."],
    ["x{connect=my+,clabel=Lx-}|."],
    ["x{connect=my+,clabel=Lz+}|."],
    ["x{connect=my-,clabel=Lx+}"],
    ["x{connect=my-,clabel=Lz-}"],
    ["x{connect=my-,clabel=Lx-}"],
    ["x{connect=my-,clabel=Lz+}"],
    ["x{connect=mx+,clabel=Lz+}."],
    ["x{connect=mx+,clabel=Ly-}."],
    ["x{connect=mx+,clabel=Lz-}."],
    ["x{connect=mx+,clabel=Ly+}."],
    [".x{connect=mx-,clabel=Lz+}"],
    [".x{connect=mx-,clabel=Ly-}"],
    [".x{connect=mx-,clabel=Lz-}"],
    [".x{connect=mx-,clabel=Ly+}"]
], $plate_width = 75, $joint_inset = 0);

// Female connector test:
*burr_plate([
    ["x{connect=fz+,clabel=Lx+}"],
    ["x{connect=fz+,clabel=Ly-}"],
    ["x{connect=fz+,clabel=Lx-}"],
    ["x{connect=fz+,clabel=Ly+}"],
    ["x{connect=fz-,clabel=Lx+}"],
    ["x{connect=fz-,clabel=Ly-}"],
    ["x{connect=fz-,clabel=Lx-}"],
    ["x{connect=fz-,clabel=Ly+}"],
    ["x{connect=fy+,clabel=Lx+}"],
    ["x{connect=fy+,clabel=Lz-}"],
    ["x{connect=fy+,clabel=Lx-}"],
    ["x{connect=fy+,clabel=Lz+}"],
    ["x{connect=fy-,clabel=Lx+}"],
    ["x{connect=fy-,clabel=Lz-}"],
    ["x{connect=fy-,clabel=Lx-}"],
    ["x{connect=fy-,clabel=Lz+}"],
    ["x{connect=fx+,clabel=Lz+}"],
    ["x{connect=fx+,clabel=Ly-}"],
    ["x{connect=fx+,clabel=Lz-}"],
    ["x{connect=fx+,clabel=Ly+}"],
    ["x{connect=fx-,clabel=Lz+}"],
    ["x{connect=fx-,clabel=Ly-}"],
    ["x{connect=fx-,clabel=Lz-}"],
    ["x{connect=fx-,clabel=Ly+}"]
], $plate_width = 75, $joint_inset = 0);

*burr_piece(975);
*burr_piece(["xxxx.|x..x.|x....|xxxxx"]);
